---
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  variant: keyof typeof variantClasses;
  color: keyof typeof colorClasses;
}>;

const { as: Tag, class: className, variant, color, ...props } = Astro.props;

const variantClasses: { [key: string]: string } = {
  h2: "text-lg font-medium uppercase lg:text-2xl",
  h3: "text-3xl font-semibold uppercase lg:text-4xl",
  "Jost-title": "text-5xl Jost Variable uppercase",
  "Jost-quote": "text-2xl Jost Variable lowercase",
  "service-title": "text-xl mb-5 md:text-3xl Jost Variable",
  body: "text-xl",
  medium: "text-md",
  small: "text-sm",
  big: "text-xl uppercase",
  bigger: "text-4xl sm:text-5xl md:text-7xl uppercase",
};

const colorClasses = {
  textDarkMode: "text-primary",
  textLightMode: "text-logodark",
  primary: "text-accent",
  neutral: "text-neutral-300",
};

const classes = [
  variantClasses[variant as keyof typeof variantClasses],
  colorClasses[color as keyof typeof colorClasses],
  className,
];
---

<Tag class:list={classes} {...props} tabindex="0">
  <slot />
</Tag>
